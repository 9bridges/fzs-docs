"use strict";(self.webpackChunkfzs_docs=self.webpackChunkfzs_docs||[]).push([[5306],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>E});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),d=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=d(n),m=a,E=p["".concat(c,".").concat(m)]||p[m]||u[m]||l;return n?r.createElement(E,o(o({ref:t},s),{},{components:n})):r.createElement(E,o({ref:t},s))}));function E(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:a,o[1]=i;for(var d=2;d<l;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3051:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var r=n(7462),a=(n(7294),n(3905));const l={sidebar_position:2},o="\u6052\u751f\u7535\u5b50 LightDB",i={unversionedId:"fzs-web-server/deployement/lightdb",id:"fzs-web-server/deployement/lightdb",title:"\u6052\u751f\u7535\u5b50 LightDB",description:"\u4fee\u6539\u6570\u636e\u5e93\u53c2\u6570\uff0c\u4f7f\u5176\u652f\u6301\u903b\u8f91\u590d\u5236",source:"@site/docs/fzs-web-server/deployement/lightdb.md",sourceDirName:"fzs-web-server/deployement",slug:"/fzs-web-server/deployement/lightdb",permalink:"/fzs-web-server/deployement/lightdb",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"OceanBase",permalink:"/fzs-web-server/deployement/oceanbase"},next:{title:"\u7248\u672c\u53d1\u5e03",permalink:"/changelog"}},c={},d=[{value:"\u4fee\u6539\u6570\u636e\u5e93\u53c2\u6570\uff0c\u4f7f\u5176\u652f\u6301\u903b\u8f91\u590d\u5236",id:"\u4fee\u6539\u6570\u636e\u5e93\u53c2\u6570\u4f7f\u5176\u652f\u6301\u903b\u8f91\u590d\u5236",level:2},{value:"\u521b\u5efa\u6570\u636e\u5e93\u767b\u5f55\u7528\u6237",id:"\u521b\u5efa\u6570\u636e\u5e93\u767b\u5f55\u7528\u6237",level:2},{value:"\u6570\u636e\u5bf9\u8c61\u64cd\u4f5c",id:"\u6570\u636e\u5bf9\u8c61\u64cd\u4f5c",level:2},{value:"\u4e3a\u6240\u6709\u540c\u6b65\u8868\u5f00\u542f\u903b\u8f91\u590d\u5236",id:"\u4e3a\u6240\u6709\u540c\u6b65\u8868\u5f00\u542f\u903b\u8f91\u590d\u5236",level:3},{value:"\u521b\u5efa\u7528\u4e8e\u540c\u6b65 ddl \u64cd\u4f5c\u7684\u76f8\u5173\u8868\u548c\u89e6\u53d1\u5668",id:"\u521b\u5efa\u7528\u4e8e\u540c\u6b65-ddl-\u64cd\u4f5c\u7684\u76f8\u5173\u8868\u548c\u89e6\u53d1\u5668",level:3}],s={toc:d},p="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u6052\u751f\u7535\u5b50-lightdb"},"\u6052\u751f\u7535\u5b50 LightDB"),(0,a.kt)("h2",{id:"\u4fee\u6539\u6570\u636e\u5e93\u53c2\u6570\u4f7f\u5176\u652f\u6301\u903b\u8f91\u590d\u5236"},"\u4fee\u6539\u6570\u636e\u5e93\u53c2\u6570\uff0c\u4f7f\u5176\u652f\u6301\u903b\u8f91\u590d\u5236"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u4fee\u6539 ",(0,a.kt)("inlineCode",{parentName:"li"},"lightdb.conf")," \u6587\u4ef6\uff0c\u8bbe\u7f6e\u4ee5\u4e0b\u53c2\u6570\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"wal_level = logical\narchive_mode = on\nmax_wal_senders = 10\nmax_replication_slots = 10\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"\u91cd\u542f\u6570\u636e\u5e93")),(0,a.kt)("h2",{id:"\u521b\u5efa\u6570\u636e\u5e93\u767b\u5f55\u7528\u6237"},"\u521b\u5efa\u6570\u636e\u5e93\u767b\u5f55\u7528\u6237"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u521b\u5efa\u6570\u636e\u5e93\u7528\u6237")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE USER fzs1 WITH PASSWORD 'fzs1';\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"\u8d4b\u4e88\u8d85\u7ea7\u7528\u6237\u6743\u9650\uff0c\u56e0\u4e3a\u9700\u8981\u5bf9\u6240\u6709\u8868\u8fdb\u884c\u8bfb\u53d6\u548c\u521b\u5efa publication \u64cd\u4f5c")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"ALTER USER fzs1 WITH SUPERUSER;\n")),(0,a.kt)("h2",{id:"\u6570\u636e\u5bf9\u8c61\u64cd\u4f5c"},"\u6570\u636e\u5bf9\u8c61\u64cd\u4f5c"),(0,a.kt)("h3",{id:"\u4e3a\u6240\u6709\u540c\u6b65\u8868\u5f00\u542f\u903b\u8f91\u590d\u5236"},"\u4e3a\u6240\u6709\u540c\u6b65\u8868\u5f00\u542f\u903b\u8f91\u590d\u5236"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u4fee\u6539\u4e0b\u9762\u7684 schema \u4e3a\u9700\u8981\u540c\u6b65\u7684 schema\uff0c\u6267\u884c\u67e5\u8be2\u7ed3\u679c\u4e2d\u7684 sql \u8bed\u53e5")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n  'alter table ' || schemaname || '.' || tablename || ' replica identity full;'\nFROM\n  pg_tables\nWHERE\n  schemaname IN ('fzs', 'test')\n  AND tablename NOT IN (\n      SELECT\n        relname\n      FROM\n        pg_class c\n        JOIN pg_inherits i ON\n      c.oid = i.inhrelid\n    )\n")),(0,a.kt)("h3",{id:"\u521b\u5efa\u7528\u4e8e\u540c\u6b65-ddl-\u64cd\u4f5c\u7684\u76f8\u5173\u8868\u548c\u89e6\u53d1\u5668"},"\u521b\u5efa\u7528\u4e8e\u540c\u6b65 ddl \u64cd\u4f5c\u7684\u76f8\u5173\u8868\u548c\u89e6\u53d1\u5668"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE SCHEMA IF NOT EXISTS fzs;\nCREATE TABLE fzs.ddl_command\n(\n    ddl_text TEXT COLLATE pg_catalog.\"default\",\n   id BIGSERIAL PRIMARY KEY,\n   EVENT TEXT COLLATE pg_catalog.\"default\",\n   tag TEXT COLLATE pg_catalog.\"default\",\n   username CHARACTER VARYING COLLATE pg_catalog.\"default\",\n   DATABASE CHARACTER VARYING COLLATE pg_catalog.\"default\",\n   SCHEMA CHARACTER VARYING COLLATE pg_catalog.\"default\",\n   object_type CHARACTER VARYING COLLATE pg_catalog.\"default\",\n   object_name CHARACTER VARYING COLLATE pg_catalog.\"default\",\n   client_address CHARACTER VARYING COLLATE pg_catalog.\"default\",\n   client_port integer,\n   event_time timestamp WITH time ZONE,\n   txid_current CHARACTER VARYING(128) COLLATE pg_catalog.\"default\",\n   message TEXT COLLATE pg_catalog.\"default\"\n);\n\nalter table fzs.ddl_command replica identity full;\n\nCREATE FUNCTION fzs.capture_ddl()\n    RETURNS event_trigger\n    LANGUAGE 'plpgsql'\n    COST 100\n    VOLATILE NOT LEAKPROOF SECURITY DEFINER\nAS $BODY$\n  declare ddl_text text;\n  declare max_rows int := 10000;\n  declare current_rows int;\n  declare pg_version_95 int := 90500;\n  declare pg_version_10 int := 100000;\n  declare current_version int;\n  declare object_id varchar;\n  declare alter_table varchar;\n  declare record_object record;\n  declare message text;\n  declare pub RECORD;\n  DECLARE r RECORD;\nbegin\n  select current_query() into ddl_text;\n  if TG_TAG = 'CREATE TABLE' then -- ALTER TABLE schema.TABLE REPLICA IDENTITY FULL;\n    show server_version_num into current_version;\n    if current_version >= pg_version_95 then\n      for record_object in (select * from pg_event_trigger_ddl_commands()) loop\n        if record_object.command_tag = 'CREATE TABLE' then\n          object_id := record_object.object_identity;\n        end if;\n      end loop;\n    else\n      select btrim(substring(ddl_text from '[ \\t\\r\\n\\v\\f]*[c|C][r|R][e|E][a|A][t|T][e|E][ \\t\\r\\n\\v\\f]*.*[ \\t\\r\\n\\v\\f]*[t|T][a|A][b|B][l|L][e|E][ \\t\\r\\n\\v\\f]+(.*)\\(.*'),' \\t\\r\\n\\v\\f') into object_id;\n    end if;\n    if object_id = '' or object_id is null then\n      message := 'CREATE TABLE, but ddl_text=' || ddl_text || ', current_query=' || current_query();\n    else\n      alter_table := 'ALTER TABLE ' || object_id || ' REPLICA IDENTITY FULL';\n      message := 'alter_sql=' || alter_table;\n      execute alter_table;\n    end if;\n    if current_version >= pg_version_10 then\n      for pub in (select * from pg_publication where pubname like 'fzs_%') loop\n        raise notice 'pubname=%',pub.pubname;\n        BEGIN\n          execute 'alter publication ' || pub.pubname || ' add table ' || object_id;\n        EXCEPTION WHEN OTHERS THEN\n        END;\n      end loop;\n    end if;\n  end if;\n  SELECT * into r FROM pg_event_trigger_ddl_commands();\n  insert into fzs.ddl_command(id,event,tag,username,database,schema,object_type,object_name,client_address,client_port,event_time,ddl_text,txid_current,message)\n  values (default,TG_EVENT,TG_TAG,current_user,current_database(),COALESCE(r.schema_name, CURRENT_SCHEMA),r.object_type,\n      CASE\n        WHEN POSITION('.' IN r.object_identity) > 0 THEN\n            SPLIT_PART(r.object_identity, '.', 2)\n        ELSE\n            r.object_identity\n      END, inet_client_addr(),inet_client_port(),current_timestamp,ddl_text,cast(TXID_CURRENT() as varchar(16)),message);\n\n  select count(id) into current_rows from fzs.ddl_command;\n  if current_rows > max_rows then\n    delete from fzs.ddl_command where id in (select min(id) from fzs.ddl_command);\n  end if;\nend\n$BODY$;\n\nALTER FUNCTION fzs.capture_ddl() OWNER TO lightdb;\n\nCREATE EVENT TRIGGER intercept_ddl ON ddl_command_end EXECUTE PROCEDURE fzs.capture_ddl();\n")))}u.isMDXComponent=!0}}]);